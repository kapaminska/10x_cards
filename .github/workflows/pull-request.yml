name: Pull Request CI

on:
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps --force

      - name: Run linter
        run: npm run lint

  unit-test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps --force

      - name: Run unit tests with coverage
        run: npm run test:unit -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/

  e2e-test:
    runs-on: ubuntu-latest
    needs: lint
    environment: integration
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps --force

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium firefox webkit

      - name: Install Supabase CLI
        run: |
          curl -sSfL https://supabase.com/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Start Supabase local development
        run: |
          supabase start
          echo "SUPABASE_URL=http://127.0.0.1:54321" >> $GITHUB_ENV
          echo "SUPABASE_ANON_KEY=$(supabase status -o env | grep SUPABASE_ANON_KEY | cut -d'=' -f2)" >> $GITHUB_ENV

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
          SUPABASE_URL: ${{ env.SUPABASE_URL }}
          SUPABASE_KEY: ${{ env.SUPABASE_ANON_KEY }}

      - name: Upload E2E test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: playwright-report/

      - name: Stop Supabase
        if: always()
        run: supabase stop

  status-comment:
    runs-on: ubuntu-latest
    needs: [unit-test, e2e-test]
    if: success()
    steps:
      - name: Post success comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… All checks passed successfully!'
            })
